{"version":3,"sources":["Header.js","About.js","Home.js","Route.js","serviceWorker.js","index.js"],"names":["Header","class","to","React","Component","About","Grid","container","direction","justify","Home","className","href","title","AppRouter","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","Route","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAwBeA,G,uLAjBX,OACM,4BAAQC,MAAM,UACZ,6BACE,yBAAKA,MAAM,SACT,kBAAC,IAAD,CAAMC,GAAG,KAAI,uBAAGD,MAAM,QAAT,SAEf,yBAAKA,MAAM,SACT,kBAAC,IAAD,CAAMC,GAAG,UAAS,uBAAGD,MAAM,QAAT,iB,GATbE,IAAMC,Y,QCkBZC,E,iLAjBX,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,UACR,yBAAKR,MAAM,OACT,8CACA,6BACA,+EACA,sFACA,uD,GAZUE,IAAMC,WCqCXM,E,iLAnCX,OACE,kBAACJ,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACRC,QAAQ,UACZ,yBAAKE,UAAU,OAEb,yBAAKA,UAAU,UACb,gDAGF,yBAAKV,MAAM,WAET,yBAAKA,MAAM,sBACT,uBAAGW,KAAK,+BAA+BC,MAAM,SAAQ,uBAAGZ,MAAM,oBAEhE,yBAAKA,MAAM,qBACT,uBAAGW,KAAK,qCAAqCC,MAAM,UAAS,uBAAGZ,MAAM,mBAEvE,yBAAKA,MAAM,qBACT,uBAAGW,KAAK,8BAA8BC,MAAM,SAAQ,uBAAGZ,MAAM,uCAK/D,yBAAKA,MAAM,mBACT,uBAAGW,KAAK,+BAA+BC,MAAM,QAAO,uBAAGZ,MAAM,4B,GA5BxDE,IAAMC,WCgBVU,E,iLAZX,OACE,6BACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,SAASC,UAAWZ,U,GAPpBD,aCMJc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACC,EAAD,MAAWC,SAASC,eAAe,WD6H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5e368f8b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom'\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n          <header class=\"header\">\n            <div>\n              <div class=\"links\">\n                <Link to=\"/\"><p class=\"head\">Top</p></Link>\n              </div>\n              <div class=\"links\">\n                <Link to=\"/About\"><p class=\"head\">About</p></Link>\n              </div>\n            </div>\n          </header>\n        \n    );\n  }\n}\n\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid'\n\nclass About extends React.Component {\n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\">\n        <div class=\"box\">\n          <p>Namiko Toriyama</p>\n          <br></br>\n          <p>お茶の水女子大学</p>\n          <p>理学部情報科学科4年</p>\n          <p>準備中</p>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid'\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Grid\n          container\n          direction=\"column\"\n            justify=\"center\">\n        <div className=\"App\">\n          \n          <div className=\"namiko\">\n            <h1>Namiko Toriyama</h1>\n          </div>\n\n          <div class=\"sns_box\">\n          {/* icon : https://fontawesome.com/ */}\n            <div class=\"sns_button twitter\">\n              <a href=\"https://twitter.com/lnamikol\" title=\"Tweet\"><i class=\"fa fa-twitter\"></i></a>\n            </div>\n            <div class=\"sns_button github\">\n              <a href=\"https://github.com/NamikoToriyama/\" title=\"GitHub\"><i class=\"fa fa-github\"></i></a>\n            </div>\n            <div class=\"sns_button google\">\n              <a href=\"https://qiita.com/Tori-chan\" title=\"Qiita\"><i class=\"fa fa-search fa-stack-20x  fa-5x\"></i></a>\n            </div>\n            {/* <div class=\"sns_button atcoder\">\n              <a href=\"https://atcoder.jp/users/Yanami\" title=\"Blog\"><i class=\"fa fa-link\"></i></a>\n            </div> */}\n            <div class=\"sns_button mail\">\n              <a href=\"mailto:namiko.trym@gmail.com\" title=\"Mail\"><i class=\"fa fa-envelope\"></i></a>\n            </div>\n          </div>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './Header';\nimport About from './About';\nimport Home from './Home';\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n            <Header />\n            <Route exact path='/' component={Home}/>\n            <Route path='/About' component={About}/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Route from './Route';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Route />, document.getElementById('header'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}